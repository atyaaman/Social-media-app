<%- include('partials/header'); -%>
    <div class="hit">

        <h3><strong>What is an Array?</strong></h3>
        <blockquote>
            <p>An array is a collection of items of same data type stored at contiguous memory locations.&nbsp;</p>
            <p>This makes it easier to calculate the position of each element by simply adding an
                <strong>offset</strong> to a base value, i.e., the memory location of the first element of the array
                (generally denoted by the name of the array). The base value is index 0 and the difference between the
                two indexes is the <strong>offset</strong>.</p>
            <div id=GFG_AD_gfg_mobile_336x280></div>
        </blockquote>
        <p>For simplicity, we can think of an array as a fleet of stairs where on each step is placed a value
            (let&#8217;s say one of your friends). Here, you can identify the location of any of your friends by simply
            knowing the count of the step they are on.&nbsp;<br>Remember: &#8220;Location of next index depends on the
            data type we use&#8221;.&nbsp;</p>
        <p style=text-align:center><img src=https://media.geeksforgeeks.org/wp-content/uploads/array-2.png alt=array>
        </p>
        <div hidead=auto>&nbsp;</div><span style=background-color:#fff;color:#0d0d0e><strong>Is the array always of
                fixed size?</strong></span></h3>
        <p>In C language, the array has a fixed size meaning once the size is given to it, it cannot be changed i.e. you
            can't shrink it nor can you expand it. The reason was that for expanding if we change the size we can't be
            sure ( it's not possible every time) that we get the next memory location to us for free. The shrinking will
            not work because the array, when declared, gets memory statically allocated, and thus compiler is the only
            one that can destroy it.</p>
        <h3><strong>Types of indexing in an</strong> <strong>array:</strong>&nbsp;</h3>
        <ul>
            <li>0 (zero-based indexing): The first element of the array is indexed by a subscript of 0.</li>
            <li>1 (one-based indexing): The first element of the array is indexed by the subscript of 1.</li>
            <li>n (N-based indexing): The base index of an array can be freely chosen. Usually, programming languages
                allowing n-based indexing also allow negative index values, and other scalar data types like
                enumerations, or characters may be used as an array index.</li>
        </ul>
        <p style=text-align:center><img src=https://media.geeksforgeeks.org/wp-content/cdn-uploads/Array-In-C.png
                alt="Array Data Structure"></p>
        <h3><strong>How an Array is initialized?</strong></h3>
        <p>By default the array is uninitialized, and no elements of the array are set to any value. However, for the
            proper working of the array, array initialization becomes important. Array initialization can be done by the
            following methods:</p>
        <p><strong><u>1. Passing no value within the initializer:</u></strong> One can initialize the array by defining
            the size of the array and passing no values within the initializer.</p>
        <p><strong>Syntax:</strong></p>
        <blockquote>
            <p>int arr[ 5 ] = { &nbsp;};</p>
        </blockquote>
        <p><strong><u>2. By passing specific values within the initializer:</u></strong> One can initialize the array by
            defining the size of the array and passing specific values within the initializer.&nbsp;</p>
        <p><strong>Syntax:</strong></p>
        <blockquote>
            <p>int arr[ 5 ] = { 1 , 2 , 3 , 4 , 5 };</p>
            <div style="text-align:center;margin:20px 0" id=GFG_AD_gfg_outstream_incontent></div>
        </blockquote>
        <p><strong>Note: The count of elements within the &#8220;{ }&#8221;, must be less than the size of the
                array&nbsp;</strong><br>If the count of elements within the &#8220;{ }&#8221; is less than the size of
            the array, the remaining positions are considered to be &#8216;0&#8217;.</p>
        <p><strong>Syntax:</strong></p>
        <blockquote>
            <p>int arr[ 5 ] = { 1 , 2 , 3 } ;</p>
        </blockquote>
        <p><strong><u>3. By passing specific values within the initializer but not declaring the size:</u></strong> One
            can initialize the array by passing specific values within the initializer and not particularly mentioning
            the size, the size is interpreted by the compiler.</p>
        <p><strong>Syntax:</strong></p>
        <blockquote>
            <p>int arr[ &nbsp;] = { 1 , 2 , 3 , 4 , 5 };</p>
        </blockquote>
        <p><strong><u>4. Universal Initialization:</u></strong> After the adoption of <strong>universal initialization
            </strong>in C++, one can avoid using the equals sign between the declaration and the initializer.&nbsp;</p>
        <p><strong>Syntax:</strong></p>
        <blockquote>
            <p>int arr[ ] &nbsp;{ 1 , 2 , 3 , 4 , 5 };</p>
        </blockquote>
        <div style="text-align:center;margin:20px 0" id=GFG_AD_gfg_outstream_incontent></div>

        <h3><strong>What are the different operations on the array?</strong></h3>
        <p>Arrays allow random access to elements. This makes accessing elements by position faster. Hence operation
            like searching, insertion, and access becomes really efficient. Array elements can be accessed using the
            loops.</p>
        <p><strong>1. <u>Insertion in Array:</u></strong></p>
        <p>We try to insert a value to a particular array index position, as the array provides random access it can be
            done easily using the assignment operator.</p>
        <p><strong>Pseudo Code:</strong></p>
        <blockquote>
            <p>// to insert a value= 10 at index position 2;</p>
            <p>arr[ 2 ] = 10;</p>
        </blockquote>
        <p><strong>Time Complexity:</strong>&nbsp;</p>
        <ul>
            <li>O(1) to insert a single element</li>
            <li>O(N) to insert all the array elements [where N is the size of the array]</li>
        </ul>
        <p><strong>2. <u>Access elements in Array:</u></strong></p>
        <p>Accessing array elements become extremely important, in order to perform operations on arrays.</p>
        <p><strong>Pseudo Code:</strong></p>
        <div style="text-align:center;margin:20px 0" id=GFG_AD_gfg_outstream_incontent></div>
        <blockquote>
            <p>// to access array element at index position 2, we simply can write</p>
            <p>return arr[ 2 ] ;</p>
        </blockquote>
        <p><strong>Time Complexity:</strong> O(1)</p>
        <p><strong>3. <u>Searching in Array:</u></strong><u>&nbsp;</u></p>
        <p>We try to find a particular value in the array, in order to do that we need to access all the array elements
            and look for the particular value.</p>
        <p><strong>Pseudo Code:</strong></p>
        <blockquote>
            <p>// searching for value 2 in the array;</p>
            <p>Loop from i = 0 to 5:<br>&nbsp; &nbsp; check if &nbsp;arr[i] = 2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return
                true;</p>
        </blockquote>
        <p><strong>Time Complexity:</strong> O(N), where N is the size of the array.</p>
        <p>Here is the code for working with an array:</p>
        <div class=responsive-tabs>
            <h2 class=tabtitle>C++</h2>
            <div class=tabcontent>
                <div class=code-block>
                    <div class=code-container>
                        <div id=highlighter_784245 class="syntaxhighlighter nogutter">
                            <table cellpadding=0 cellspacing=0>
                                <tbody>
                                    <tr>
                                        <td class=code>
                                            <div class=container>
                                                <div class="line number1 index0 alt2"><code
                                                        class=preprocessor>#include &lt;iostream></code></div>
                                                <div class="line number2 index1 alt1"><code
                                                        class="keyword bold">using</code> <code
                                                        class="keyword bold">namespace</code> <code
                                                        class=plain>std;</code></div>
                                                <div class="line number3 index2 alt2">&nbsp;</div>
                                                <div class="line number4 index3 alt1"><code
                                                        class="color1 bold">int</code> <code class=plain>main()</code>
                                                </div>
                                                <div class="line number5 index4 alt2"><code class=plain>{</code></div>
                                                <div class="line number6 index5 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// Creating an integer array</code></div>
                                                <div class="line number7 index6 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// named arr of size 10.</code></div>
                                                <div class="line number8 index7 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class="color1 bold">int</code> <code class=plain>arr[10];</code>
                                                </div>
                                                <div class="line number9 index8 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// accessing element at 0 index</code></div>
                                                <div class="line number10 index9 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// and setting its value to 5.</code></div>
                                                <div class="line number11 index10 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>arr[0] = 5;</code></div>
                                                <div class="line number12 index11 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// access and print value at 0</code></div>
                                                <div class="line number13 index12 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// index we get the output as 5.</code></div>
                                                <div class="line number14 index13 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>cout &lt;&lt; arr[0];</code></div>
                                                <div class="line number15 index14 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class="keyword bold">return</code> <code class=plain>0;</code>
                                                </div>
                                                <div class="line number16 index15 alt1"><code class=plain>}</code></div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=code-editor-container></div>
                    </p>
                </div>
                <div class=code-output-container>
                    <div class=output-block><i id=output-icon title=Output
                            class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i>
                        </p>
                        <pre class=output-pre></pre>
                        </p>
                    </div>
                    <div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL"
                            class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p>
                        <pre id=ide-url></pre>
                        </p>
                    </div>
                    </p>
                </div>
            </div>
            <h2 class=tabtitle>C</h2>
            <div class=tabcontent>
                <div class=code-block>
                    <div class=code-container>
                        <div id=highlighter_673420 class="syntaxhighlighter nogutter">
                            <table border=0 cellpadding=0 cellspacing=0>
                                <tbody>
                                    <tr>
                                        <td class=code>
                                            <div class=container>
                                                <div class="line number1 index0 alt2"><code
                                                        class=preprocessor>#include &lt;stdio.h></code></div>
                                                <div class="line number2 index1 alt1">&nbsp;</div>
                                                <div class="line number3 index2 alt2"><code
                                                        class="color1 bold">int</code> <code class=plain>main()</code>
                                                </div>
                                                <div class="line number4 index3 alt1"><code class=plain>{</code></div>
                                                <div class="line number5 index4 alt2">&nbsp;</div>
                                                <div class="line number6 index5 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// Creating an integer array</code></div>
                                                <div class="line number7 index6 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// named arr of size 10.</code></div>
                                                <div class="line number8 index7 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class="color1 bold">int</code> <code class=plain>arr[10];</code>
                                                </div>
                                                <div class="line number9 index8 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// accessing element at 0 index</code></div>
                                                <div class="line number10 index9 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// and setting its value to 5.</code></div>
                                                <div class="line number11 index10 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>arr[0] = 5;</code></div>
                                                <div class="line number12 index11 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// access and print value at 0</code></div>
                                                <div class="line number13 index12 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// index we get the output as 5.</code></div>
                                                <div class="line number14 index13 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class="functions bold">printf</code><code
                                                        class=plain>(</code><code class=string>"%d"</code><code
                                                        class=plain>, arr[0]);</code></div>
                                                <div class="line number15 index14 alt2">&nbsp;</div>
                                                <div class="line number16 index15 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class="keyword bold">return</code> <code class=plain>0;</code>
                                                </div>
                                                <div class="line number17 index16 alt2"><code class=plain>}</code></div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=code-editor-container></div>
                    </p>
                </div>
                <div class=code-output-container>
                    <div class=output-block><i id=output-icon title=Output
                            class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i>
                        </p>
                        <pre class=output-pre></pre>
                        </p>
                    </div>
                    <div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL"
                            class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p>
                        <pre id=ide-url></pre>
                        </p>
                    </div>
                    </p>
                </div>
            </div>
            <h2 class=tabtitle>Java</h2>
            <div class=tabcontent>
                <div class=code-block>
                    <div class=code-container>
                        <div id=highlighter_812689 class="syntaxhighlighter nogutter">
                            <table border=0 cellpadding=0 cellspacing=0>
                                <tbody>
                                    <tr>
                                        <td class=code>
                                            <div class=container>
                                                <div class="line number1 index0 alt2"><code class=keyword>class</code>
                                                    <code class=plain>code_buddy</code></div>
                                                <div class="line number2 index1 alt1"><code class=plain>{</code></div>
                                                <div class="line number3 index2 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=keyword>public</code> <code class=keyword>static</code>
                                                    <code class=keyword>void</code> <code
                                                        class=plain>main (String[] args)</code></div>
                                                <div class="line number4 index3 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>{&nbsp;&nbsp;&nbsp;</code></div>
                                                <div class="line number5 index4 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;
                                                </div>
                                                <div class="line number6 index5 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// Creating an integer array</code></div>
                                                <div class="line number7 index6 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// named arr of size 10.</code></div>
                                                <div class="line number8 index7 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=keyword>int</code><code class=plain>[] arr = </code><code
                                                        class=keyword>new</code> <code class=keyword>int</code><code
                                                        class=plain>[</code><code class=value>10</code><code
                                                        class=plain>];</code></div>
                                                <div class="line number9 index8 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;
                                                </div>
                                                <div class="line number10 index9 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// accessing element at 0 index</code></div>
                                                <div class="line number11 index10 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// and setting its value to 5.</code></div>
                                                <div class="line number12 index11 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>arr[</code><code class=value>0</code><code
                                                        class=plain>] = </code><code class=value>5</code><code
                                                        class=plain>;</code></div>
                                                <div class="line number13 index12 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;
                                                </div>
                                                <div class="line number14 index13 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// access and print value at 0</code></div>
                                                <div class="line number15 index14 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=comments>// index we get the output as 5.</code></div>
                                                <div class="line number16 index15 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>System.out.println(arr[</code><code
                                                        class=value>0</code><code
                                                        class=plain>]);&nbsp;&nbsp;&nbsp;</code></div>
                                                <div class="line number17 index16 alt2"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;
                                                </div>
                                                <div class="line number18 index17 alt1"><code
                                                        class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                        class=plain>}</code></div>
                                                <div class="line number19 index18 alt2"><code class=plain>}</code></div>
                                                <div class="line number20 index19 alt1">&nbsp;</div>
                                                <div class="line number21 index20 alt2"><code class=comments></code>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=code-editor-container></div>
                    </p>
                </div>
                <div class=code-output-container>
                    <div class=output-block><i id=output-icon title=Output
                            class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i>
                        </p>
                        <pre class=output-pre></pre>
                        </p>
                    </div>
                    <div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL"
                            class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p>
                        <pre id=ide-url></pre>
                        </p>
                    </div>
                    </p>
                </div>
            </div>
        </div>
        <div class=code-output><strong>Output</strong></p>
            <pre>5</pre>
        </div>
        <p>Here the value 5 is printed because the first element has index zero and at the zeroth index, we already
            assigned the value 5.</p>
        <h3><strong>Advantages of using arrays:</strong>&nbsp;</h3>
        <ul>
            <li>Arrays allow random access to elements. This makes accessing elements by position faster.</li>
            <li>Arrays have better&nbsp;cache locality&nbsp;which makes a pretty big difference in performance.</li>
            <li>Arrays represent multiple data items of the same type using a single name.</li>
        </ul>
        <h3><strong>Disadvantages of using arrays:</strong>&nbsp;</h3>
        <p>You can't change the size i.e. once you have declared the array you can't change its size because of static
            memory allocation.&nbsp;Here Insertion(s) and deletion(s) are difficult as the elements are stored in
            consecutive memory locations and the shifting operation is costly too.</p>
        <p>Now if take an example of the implementation of data structure Stack using array there are some obvious
            flaws.&nbsp;<br>Let's take the <strong>POP </strong>operation of the stack. The algorithm would go something
            like this.&nbsp;</p>
        <ol>
            <li>Check for the stack underflow</li>
            <li>Decrement the top by 1</li>
        </ol>
        <p>What we are doing here is, that the pointer to the topmost element is decremented, which means we are just
            bounding our view, and actually that element stays there taking up the memory space. If you have an array
            (as a Stack) of any primitive data type then it might be ok. But in the case of an array of Objects, it
            would take a lot of memory.</p>
        <p><strong>Examples &#8211;</strong>&nbsp;</p>
        <blockquote>
            <p>// A character array in C/C++/Java<br>char arr1[] = {&#8216;g&#8217;, &#8216;e&#8217;, &#8216;e&#8217;,
                &#8216;k&#8217;, &#8216;s&#8217;};</p>
            <p>// An Integer array in C/C++/Java<br>int arr2[] = {10, 20, 30, 40, 50};</p>
            <p>// Item at i&#8217;th index in array is typically accessed as &#8220;arr[i]&#8221;. &nbsp;<br>For
                example:<br>arr1[0] gives us &#8216;g&#8217;<br>arr2[3] gives us 40</p>
            <div style="text-align:center;margin:20px 0" id=GFG_AD_gfg_outstream_incontent></div>
        </blockquote>
        <p>Usually, an array of characters is called a &#8216;string&#8217;, whereas an array of ints or floats is
            simply called an array.</p>
        <h3><strong>Applications on Array</strong></h3>
        <ul>
            <li>Array stores data elements of the same data type.</li>
            <li>Arrays are used when the size of the data set is known.</li>
            <li>Used in solving matrix problems.</li>
            <li>Applied as a lookup table in computer.</li>
            <li>Databases records are also implemented by the array.</li>
            <li>Helps in implementing sorting algorithm.</li>
            <li>The different variables of the same type can be saved under one name.</li>
            <li>Arrays can be used for CPU scheduling.</li>
            <li>Used to Implement other data structures like Stacks, Queues, Heaps, Hash tables, etc.</li>
        </ul>
    </div>



    <%- include('partials/footer'); -%>