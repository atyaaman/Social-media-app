<%- include('partials/header'); -%>


    <div>
        <blockquote>
            <p>Like Merge Sort <strong>QuickSort </strong>is a Divide and Conquer
                algorithm</a>. It picks an element as a pivot and partitions the given array around the picked pivot.
                There are many different versions of quickSort that pick pivot in different ways.&nbsp;</p>
            <ul>
                <li>Always pick the first element as a pivot.</li>
                <li>Always pick the last element as a pivot (implemented below)</li>
                <li>Pick a random element as a pivot.</li>
                <li>Pick median as the pivot.</li>
            </ul>
            <p>The key process in <strong>quickSort </strong>is a partition(). The target of partitions is, given an
                array and an element x of an array as the pivot, put x at its correct position in a sorted array and put
                all smaller elements (smaller than x) before x, and put all greater elements (greater than x) after x.
                All this should be done in linear time.</p>
            <div style="text-align:center;margin:20px 0" id=GFG_AD_gfg_outstream_incontent></div>
            <p style=text-align:center><img
                    src=https://www.geeksforgeeks.org/wp-content/uploads/gq/2014/01/QuickSort2.png alt=quicksort></p>
            <p><strong>Partition Algorithm:</strong>&nbsp;</p>
            <p>There can be many ways to do partition, following pseudo-code adopts the method given in the CLRS book.
                The logic is simple, we start from the leftmost element and keep track of the index of smaller (or equal
                to) elements as i. While traversing, if we find a smaller element, we swap the current element with
                arr[i]. Otherwise, we ignore the current element.&nbsp;</p>
            <p><strong>Pseudo Code for recursive QuickSort function:</strong></p>
            <blockquote>
                <p>/* low &nbsp;&#8211;> Starting index, &nbsp;high &nbsp;&#8211;> Ending index */</p>
                <p>quickSort(arr[], low, high) {</p>
                <p>&nbsp; &nbsp; if (low &lt; high) {</p>
                <p>&nbsp; &nbsp; &nbsp; &nbsp; /* pi is partitioning index, arr[pi] is now at right place */</p>
                <p>&nbsp; &nbsp; &nbsp; &nbsp; pi = partition(arr, low, high);</p>
                <p>&nbsp; &nbsp; &nbsp; &nbsp; quickSort(arr, low, pi &#8211; 1); &nbsp;// Before pi</p>
                <p>&nbsp; &nbsp; &nbsp; &nbsp; quickSort(arr, pi + 1, high); // After pi</p>
                <p>&nbsp; &nbsp; }</p>
                <p>}</p>
            </blockquote>
            <p><strong>Pseudo code for partition()</strong>&nbsp;&nbsp;</p>
            <blockquote>
                <p>/* This function takes last element as pivot, places the pivot element at its correct position in
                    sorted array, and places all smaller (smaller than pivot) to left of pivot and all greater elements
                    to right of pivot */</p>
                <p>partition (arr[], low, high)<br>{<br>&nbsp; &nbsp; // pivot (Element to be placed at right
                    position)<br>&nbsp; &nbsp; pivot = arr[high]; &nbsp;</p>
                <p>&nbsp; &nbsp; i = (low &#8211; 1) &nbsp;// Index of smaller element and indicates the&nbsp;<br>&nbsp;
                    &nbsp; // right position of pivot found so far</p>
                <p>&nbsp; &nbsp; for (j = low; j &lt;= high- 1; j++){</p>
                <p>&nbsp; &nbsp; &nbsp; &nbsp; // If current element is smaller than the pivot<br>&nbsp; &nbsp; &nbsp;
                    &nbsp; if (arr[j] &lt; pivot){<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i++; &nbsp; &nbsp;//
                    increment index of smaller element<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; swap arr[i] and
                    arr[j]<br>&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; swap arr[i + 1] and
                    arr[high])<br>&nbsp; &nbsp; return (i + 1)<br>}</p>
            </blockquote>
            <p><strong>Illustration of partition() :</strong>&nbsp;</p>
            <blockquote>
                <p>Consider: arr[] = {10, 80, 30, 90, 40, 50, 70}</p>
                <ul>
                    <li>Indexes: &nbsp;0 &nbsp; 1 &nbsp; 2 &nbsp; 3 &nbsp; 4 &nbsp; 5 &nbsp; 6&nbsp;</li>
                    <li>low = 0, high = &nbsp;6, pivot = arr[h] = 70</li>
                    <li>Initialize index of smaller element, <strong>i = -1</strong></li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220525094716/Artboard1.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li>Traverse elements from j = low to high-1<ul>
                            <li><strong>j = 0</strong>: Since arr[j] &lt;= pivot, do i++ and swap(arr[i], arr[j])</li>
                            <li><strong>i = 0&nbsp;</strong></li>
                        </ul>
                    </li>
                    <li>arr[] = {10, 80, 30, 90, 40, 50, 70} // No change as i and j are same</li>
                    <li><strong>j = 1</strong>: Since arr[j] > pivot, do nothing</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220525094736/Artboard2.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li><strong>j = 2</strong> : Since arr[j] &lt;= pivot, do i++ and swap(arr[i], arr[j])</li>
                    <li><strong>i = 1</strong></li>
                    <li>arr[] = {10, 30, 80, 90, 40, 50, 70} // We swap 80 and 30&nbsp;</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220525094756/Artboard3.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li><strong>j = 3</strong> : Since arr[j] > pivot, do nothing // No change in i and arr[]</li>
                    <li><strong>j = 4</strong> : Since arr[j] &lt;= pivot, do i++ and swap(arr[i], arr[j])</li>
                    <li><strong>i = 2</strong></li>
                    <li>arr[] = {10, 30, 40, 90, 80, 50, 70} // 80 and 40 Swapped</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220525094812/Artboard4.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li><strong>j = 5</strong> : Since arr[j] &lt;= pivot, do i++ and swap arr[i] with arr[j]&nbsp;</li>
                    <li><strong>i = 3&nbsp;</strong></li>
                    <li>arr[] = {10, 30, 40, 50, 80, 90, 70} // 90 and 50 Swapped&nbsp;</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220525094930/Artboard51.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li>We come out of loop because j is now equal to high-1.</li>
                    <li><strong>Finally we place pivot at correct position by swapping arr[i+1] and arr[high] (or
                            pivot)</strong>&nbsp;</li>
                    <li>arr[] = {10, 30, 40, 50, 70, 90, 80} // 80 and 70 Swapped&nbsp;</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220527110840/Artboard10.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li>Now 70 is at its correct place. All elements smaller than 70 are before it and all elements
                        greater than 70 are after it.</li>
                    <li>Since quick sort is a recursive function, we call the partition function again at left and right
                        partitions</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220527110915/Artboard101.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
                <ul>
                    <li>Again call function at right part and swap 80 and 90</li>
                </ul>
                <div style=width:810px class="wp-caption alignnone"><img
                        src=https://media.geeksforgeeks.org/wp-content/uploads/20220527110931/Artboard102.jpg>
                    <p class=wp-caption-text>&nbsp;</p>
                </div>
            </blockquote>
            <div hidead=auto></div>
            <p><strong>Implementation:</strong>&nbsp;<br>Following are the implementations of QuickSort:&nbsp;&nbsp;</p>
            <div class=responsive-tabs>
                <h2 class=tabtitle>C++14</h2>
                <div class=tabcontent>
                    <div class=code-block>
                        <div class=code-container>
                            <div id=highlighter_150954 class="syntaxhighlighter nogutter">
                                <table border=0 cellpadding=0 cellspacing=0>
                                    <tbody>
                                        <tr>
                                            <td class=code>
                                                <div class=container>
                                                    <div class="line number1 index0 alt2"><code
                                                            class=comments>/* C++ implementation of QuickSort */</code>
                                                    </div>
                                                    <div class="line number2 index1 alt1"><code
                                                            class=preprocessor>#include &lt;bits/stdc++.h></code></div>
                                                    <div class="line number3 index2 alt2"><code
                                                            class="keyword bold">using</code> <code
                                                            class="keyword bold">namespace</code> <code
                                                            class=plain>std;</code></div>
                                                    <div class="line number4 index3 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number5 index4 alt2"><code
                                                            class=comments>// A utility function to swap two elements</code>
                                                    </div>
                                                    <div class="line number6 index5 alt1"><code
                                                            class="keyword bold">void</code> <code
                                                            class=plain>swap(</code><code
                                                            class="color1 bold">int</code><code
                                                            class=plain>* a, </code><code
                                                            class="color1 bold">int</code><code class=plain>* b)</code>
                                                    </div>
                                                    <div class="line number7 index6 alt2"><code class=plain>{</code>
                                                    </div>
                                                    <div class="line number8 index7 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>t = *a;</code></div>
                                                    <div class="line number9 index8 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>*a = *b;</code></div>
                                                    <div class="line number10 index9 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>*b = t;</code></div>
                                                    <div class="line number11 index10 alt2"><code class=plain>}</code>
                                                    </div>
                                                    <div class="line number12 index11 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number13 index12 alt2"><code
                                                            class=comments>/* This function takes last element as pivot, places</code>
                                                    </div>
                                                    <div class="line number14 index13 alt1"><code
                                                            class=comments>the pivot element at its correct position in sorted</code>
                                                    </div>
                                                    <div class="line number15 index14 alt2"><code
                                                            class=comments>array, and places all smaller (smaller than pivot)</code>
                                                    </div>
                                                    <div class="line number16 index15 alt1"><code
                                                            class=comments>to left of pivot and all greater elements to right</code>
                                                    </div>
                                                    <div class="line number17 index16 alt2"><code
                                                            class=comments>of pivot */</code></div>
                                                    <div class="line number18 index17 alt1"><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>partition(</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>arr[], </code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>low, </code><code class="color1 bold">int</code>
                                                        <code class=plain>high)</code></div>
                                                    <div class="line number19 index18 alt2"><code class=plain>{</code>
                                                    </div>
                                                    <div class="line number20 index19 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>pivot = arr[high]; </code><code
                                                            class=comments>// pivot</code></div>
                                                    <div class="line number21 index20 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code class=plain>i</code>
                                                    </div>
                                                    <div class="line number22 index21 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>= (low</code></div>
                                                    <div class="line number23 index22 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>- 1); </code><code
                                                            class=comments>// Index of smaller element and indicates</code>
                                                    </div>
                                                    <div class="line number24 index23 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// the right position of pivot found so far</code>
                                                    </div>
                                                    <div class="line number25 index24 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number26 index25 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="keyword bold">for</code> <code
                                                            class=plain>(</code><code class="color1 bold">int</code>
                                                        <code class=plain>j = low; j &lt;= high - 1; j++) {</code></div>
                                                    <div class="line number27 index26 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// If current element is smaller than the pivot</code>
                                                    </div>
                                                    <div class="line number28 index27 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="keyword bold">if</code> <code
                                                            class=plain>(arr[j] &lt; pivot) {</code></div>
                                                    <div class="line number29 index28 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>i++; </code><code
                                                            class=comments>// increment index of smaller element</code>
                                                    </div>
                                                    <div class="line number30 index29 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>swap(&arr[i], &arr[j]);</code></div>
                                                    <div class="line number31 index30 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number32 index31 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number33 index32 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>swap(&arr[i + 1], &arr[high]);</code></div>
                                                    <div class="line number34 index33 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="keyword bold">return</code> <code
                                                            class=plain>(i + 1);</code></div>
                                                    <div class="line number35 index34 alt2"><code class=plain>}</code>
                                                    </div>
                                                    <div class="line number36 index35 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number37 index36 alt2"><code
                                                            class=comments>/* The main function that implements QuickSort</code>
                                                    </div>
                                                    <div class="line number38 index37 alt1"><code
                                                            class=comments>arr[] --> Array to be sorted,</code></div>
                                                    <div class="line number39 index38 alt2"><code
                                                            class=comments>low --> Starting index,</code></div>
                                                    <div class="line number40 index39 alt1"><code
                                                            class=comments>high --> Ending index */</code></div>
                                                    <div class="line number41 index40 alt2"><code
                                                            class="keyword bold">void</code> <code
                                                            class=plain>quickSort(</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>arr[], </code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>low, </code><code class="color1 bold">int</code>
                                                        <code class=plain>high)</code></div>
                                                    <div class="line number42 index41 alt1"><code class=plain>{</code>
                                                    </div>
                                                    <div class="line number43 index42 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="keyword bold">if</code> <code
                                                            class=plain>(low &lt; high) {</code></div>
                                                    <div class="line number44 index43 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>/* pi is partitioning index, arr[p] is now</code>
                                                    </div>
                                                    <div class="line number45 index44 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>at right place */</code></div>
                                                    <div class="line number46 index45 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>pi = partition(arr, low, high);</code></div>
                                                    <div class="line number47 index46 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number48 index47 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// Separately sort elements before</code>
                                                    </div>
                                                    <div class="line number49 index48 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// partition and after partition</code></div>
                                                    <div class="line number50 index49 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>quickSort(arr, low, pi - 1);</code></div>
                                                    <div class="line number51 index50 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>quickSort(arr, pi + 1, high);</code></div>
                                                    <div class="line number52 index51 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number53 index52 alt2"><code class=plain>}</code>
                                                    </div>
                                                    <div class="line number54 index53 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number55 index54 alt2"><code
                                                            class=comments>/* Function to print an array */</code></div>
                                                    <div class="line number56 index55 alt1"><code
                                                            class="keyword bold">void</code> <code
                                                            class=plain>printArray(</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>arr[], </code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>size)</code></div>
                                                    <div class="line number57 index56 alt2"><code class=plain>{</code>
                                                    </div>
                                                    <div class="line number58 index57 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code class=plain>i;</code>
                                                    </div>
                                                    <div class="line number59 index58 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="keyword bold">for</code> <code
                                                            class=plain>(i = 0; i &lt; size; i++)</code></div>
                                                    <div class="line number60 index59 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>cout &lt;&lt; arr[i] &lt;&lt; </code><code
                                                            class=string>" "</code><code class=plain>;</code></div>
                                                    <div class="line number61 index60 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>cout &lt;&lt; endl;</code></div>
                                                    <div class="line number62 index61 alt1"><code class=plain>}</code>
                                                    </div>
                                                    <div class="line number63 index62 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number64 index63 alt1"><code
                                                            class=comments>// Driver Code</code></div>
                                                    <div class="line number65 index64 alt2"><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>main()</code></div>
                                                    <div class="line number66 index65 alt1"><code class=plain>{</code>
                                                    </div>
                                                    <div class="line number67 index66 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>arr[] = { 10, 7, 8, 9, 1, 5 };</code></div>
                                                    <div class="line number68 index67 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="color1 bold">int</code> <code
                                                            class=plain>n = </code><code
                                                            class="keyword bold">sizeof</code><code
                                                            class=plain>(arr) / </code><code
                                                            class="keyword bold">sizeof</code><code
                                                            class=plain>(arr[0]);</code></div>
                                                    <div class="line number69 index68 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>quickSort(arr, 0, n - 1);</code></div>
                                                    <div class="line number70 index69 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>cout &lt;&lt; </code><code
                                                            class=string>"Sorted array: \n"</code><code
                                                            class=plain>;</code></div>
                                                    <div class="line number71 index70 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>printArray(arr, n);</code></div>
                                                    <div class="line number72 index71 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class="keyword bold">return</code> <code
                                                            class=plain>0;</code></div>
                                                    <div class="line number73 index72 alt2"><code class=plain>}</code>
                                                    </div>
                                                    <div class="line number74 index73 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class=code-editor-container></div>
                        </p>
                    </div>
                    <div class=code-output-container>
                        <div class=output-block><i id=output-icon title=Output
                                class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i>
                            </p>
                            <pre class=output-pre></pre>
                            </p>
                        </div>
                        <div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL"
                                class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p>
                            <pre id=ide-url></pre>
                            </p>
                        </div>
                        </p>
                    </div>
                </div>
                <h2 class=tabtitle>Java</h2>
                <div class=tabcontent>
                    <div class=code-block>
                        <div class=code-container>
                            <div id=highlighter_517569 class="syntaxhighlighter nogutter">
                                <table border=0 cellpadding=0 cellspacing=0>
                                    <tbody>
                                        <tr>
                                            <td class=code>
                                                <div class=container>
                                                    <div class="line number1 index0 alt2"><code
                                                            class=comments>// Java implementation of QuickSort</code>
                                                    </div>
                                                    <div class="line number2 index1 alt1"><code
                                                            class=keyword>import</code> <code
                                                            class=plain>java.io.*;</code></div>
                                                    <div class="line number3 index2 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number4 index3 alt1"><code
                                                            class=keyword>class</code> <code class=plain>code_buddy {</code>
                                                    </div>
                                                    <div class="line number5 index4 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number6 index5 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// A utility function to swap two elements</code>
                                                    </div>
                                                    <div class="line number7 index6 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>static</code> <code class=keyword>void</code>
                                                        <code class=plain>swap(</code><code
                                                            class=keyword>int</code><code
                                                            class=plain>[] arr, </code><code class=keyword>int</code>
                                                        <code class=plain>i, </code><code class=keyword>int</code> <code
                                                            class=plain>j)</code></div>
                                                    <div class="line number8 index7 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>{</code></div>
                                                    <div class="line number9 index8 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>int</code> <code
                                                            class=plain>temp = arr[i];</code></div>
                                                    <div class="line number10 index9 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>arr[i] = arr[j];</code></div>
                                                    <div class="line number11 index10 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>arr[j] = temp;</code></div>
                                                    <div class="line number12 index11 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number13 index12 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number14 index13 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>/* This function takes last element as pivot, places</code>
                                                    </div>
                                                    <div class="line number15 index14 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>the pivot element at its correct position in sorted</code>
                                                    </div>
                                                    <div class="line number16 index15 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>array, and places all smaller (smaller than pivot)</code>
                                                    </div>
                                                    <div class="line number17 index16 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>to left of pivot and all greater elements to right</code>
                                                    </div>
                                                    <div class="line number18 index17 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>of pivot */</code></div>
                                                    <div class="line number19 index18 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>static</code> <code class=keyword>int</code>
                                                        <code class=plain>partition(</code><code
                                                            class=keyword>int</code><code
                                                            class=plain>[] arr, </code><code class=keyword>int</code>
                                                        <code class=plain>low, </code><code class=keyword>int</code>
                                                        <code class=plain>high)</code></div>
                                                    <div class="line number20 index19 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>{</code></div>
                                                    <div class="line number21 index20 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number22 index21 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// pivot</code></div>
                                                    <div class="line number23 index22 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>int</code> <code
                                                            class=plain>pivot = arr[high];</code></div>
                                                    <div class="line number24 index23 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number25 index24 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// Index of smaller element and</code></div>
                                                    <div class="line number26 index25 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// indicates the right position</code></div>
                                                    <div class="line number27 index26 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// of pivot found so far</code></div>
                                                    <div class="line number28 index27 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>int</code> <code
                                                            class=plain>i = (low - </code><code
                                                            class=value>1</code><code class=plain>);</code></div>
                                                    <div class="line number29 index28 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number30 index29 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>for</code> <code class=plain>(</code><code
                                                            class=keyword>int</code> <code
                                                            class=plain>j = low; j &lt;= high - </code><code
                                                            class=value>1</code><code class=plain>; j++) {</code></div>
                                                    <div class="line number31 index30 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number32 index31 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// If current element is smaller</code></div>
                                                    <div class="line number33 index32 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// than the pivot</code></div>
                                                    <div class="line number34 index33 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>if</code> <code
                                                            class=plain>(arr[j] &lt; pivot) {</code></div>
                                                    <div class="line number35 index34 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number36 index35 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// Increment index of</code></div>
                                                    <div class="line number37 index36 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// smaller element</code></div>
                                                    <div class="line number38 index37 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>i++;</code></div>
                                                    <div class="line number39 index38 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>swap(arr, i, j);</code></div>
                                                    <div class="line number40 index39 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number41 index40 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number42 index41 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>swap(arr, i + </code><code
                                                            class=value>1</code><code class=plain>, high);</code></div>
                                                    <div class="line number43 index42 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>return</code> <code
                                                            class=plain>(i + </code><code class=value>1</code><code
                                                            class=plain>);</code></div>
                                                    <div class="line number44 index43 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number45 index44 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number46 index45 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>/* The main function that implements QuickSort</code>
                                                    </div>
                                                    <div class="line number47 index46 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>arr[] --> Array to be sorted,</code></div>
                                                    <div class="line number48 index47 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>low --> Starting index,</code></div>
                                                    <div class="line number49 index48 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>high --> Ending index</code></div>
                                                    <div class="line number50 index49 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>*/</code></div>
                                                    <div class="line number51 index50 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>static</code> <code class=keyword>void</code>
                                                        <code class=plain>quickSort(</code><code
                                                            class=keyword>int</code><code
                                                            class=plain>[] arr, </code><code class=keyword>int</code>
                                                        <code class=plain>low, </code><code class=keyword>int</code>
                                                        <code class=plain>high)</code></div>
                                                    <div class="line number52 index51 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>{</code></div>
                                                    <div class="line number53 index52 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>if</code> <code
                                                            class=plain>(low &lt; high) {</code></div>
                                                    <div class="line number54 index53 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number55 index54 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// pi is partitioning index, arr[p]</code>
                                                    </div>
                                                    <div class="line number56 index55 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// is now at right place</code></div>
                                                    <div class="line number57 index56 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>int</code> <code
                                                            class=plain>pi = partition(arr, low, high);</code></div>
                                                    <div class="line number58 index57 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number59 index58 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// Separately sort elements before</code>
                                                    </div>
                                                    <div class="line number60 index59 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// partition and after partition</code></div>
                                                    <div class="line number61 index60 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>quickSort(arr, low, pi - </code><code
                                                            class=value>1</code><code class=plain>);</code></div>
                                                    <div class="line number62 index61 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>quickSort(arr, pi + </code><code
                                                            class=value>1</code><code class=plain>, high);</code></div>
                                                    <div class="line number63 index62 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number64 index63 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number65 index64 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number66 index65 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// Function to print an array</code></div>
                                                    <div class="line number67 index66 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>static</code> <code class=keyword>void</code>
                                                        <code class=plain>printArray(</code><code
                                                            class=keyword>int</code><code
                                                            class=plain>[] arr, </code><code class=keyword>int</code>
                                                        <code class=plain>size)</code></div>
                                                    <div class="line number68 index67 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>{</code></div>
                                                    <div class="line number69 index68 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>for</code> <code class=plain>(</code><code
                                                            class=keyword>int</code> <code class=plain>i = </code><code
                                                            class=value>0</code><code
                                                            class=plain>; i &lt; size; i++)</code></div>
                                                    <div class="line number70 index69 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>System.out.print(arr[i] + </code><code
                                                            class=string>" "</code><code class=plain>);</code></div>
                                                    <div class="line number71 index70 alt2"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number72 index71 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>System.out.println();</code></div>
                                                    <div class="line number73 index72 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number74 index73 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number75 index74 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=comments>// Driver Code</code></div>
                                                    <div class="line number76 index75 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>public</code> <code
                                                            class=keyword>static</code> <code class=keyword>void</code>
                                                        <code class=plain>main(String[] args)</code></div>
                                                    <div class="line number77 index76 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>{</code></div>
                                                    <div class="line number78 index77 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>int</code><code
                                                            class=plain>[] arr = { </code><code
                                                            class=value>10</code><code class=plain>, </code><code
                                                            class=value>7</code><code class=plain>, </code><code
                                                            class=value>8</code><code class=plain>, </code><code
                                                            class=value>9</code><code class=plain>, </code><code
                                                            class=value>1</code><code class=plain>, </code><code
                                                            class=value>5</code> <code class=plain>};</code></div>
                                                    <div class="line number79 index78 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=keyword>int</code> <code
                                                            class=plain>n = arr.length;</code></div>
                                                    <div class="line number80 index79 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                    <div class="line number81 index80 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>quickSort(arr, </code><code
                                                            class=value>0</code><code class=plain>, n - </code><code
                                                            class=value>1</code><code class=plain>);</code></div>
                                                    <div class="line number82 index81 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>System.out.println(</code><code
                                                            class=string>"Sorted array: "</code><code
                                                            class=plain>);</code></div>
                                                    <div class="line number83 index82 alt2"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>printArray(arr, n);</code></div>
                                                    <div class="line number84 index83 alt1"><code
                                                            class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
                                                            class=plain>}</code></div>
                                                    <div class="line number85 index84 alt2"><code class=plain>}</code>
                                                    </div>
                                                    <div class="line number86 index85 alt1"><code
                                                            class="undefined spaces">&nbsp;</code>&nbsp;</div>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class=code-editor-container></div>
                        </p>
                    </div>
                    <div class=code-output-container>
                        <div class=output-block><i id=output-icon title=Output
                                class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i>
                            </p>
                            <pre class=output-pre></pre>
                            </p>
                        </div>
                        <div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL"
                                class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p>
                            <pre id=ide-url></pre>
                            </p>
                        </div>
                        </p>
                    </div>
                </div>
            <div class=code-output><strong>Output</strong></p>
                <pre>Sorted array: 
1 5 7 8 9 10 </pre>
            </div>
            <h3>How to pick any element as pivot?</h3>
            <p>With one minor change to the above code, we can pick any element as pivot. For example, to make the first
                element as pivot, we can simply swap the first and last elements and then use the same code. Same thing
                can be done to pick any random element as a pivot</p>
            <h3><strong><u>Analysis of QuickSort</u></strong><u>&nbsp;</u></h3>
            <p>Time taken by QuickSort, in general, can be written as follows.&nbsp;</p>
            <blockquote>
                
                <p>&nbsp;T(n) = T(k) + T(n-k-1) +&nbsp;<img
                        src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                        class="ql-img-inline-formula quicklatex-auto-format" alt="\theta               "
                        title="Rendered by QuickLaTeX.com" height=18 width=11 style=vertical-align:0>(n)</p>
            </blockquote>
            <p>The first two terms are for two recursive calls, the last term is for the partition process. k is the
                number of elements that are smaller than the pivot.&nbsp;<br>The time taken by QuickSort depends upon
                the input array and partition strategy. Following are three cases.</p>
            <p><strong>Worst Case:</strong>&nbsp;<br>The worst case occurs when the partition process always picks the
                greatest or smallest element as the pivot. If we consider the above partition strategy where the last
                element is always picked as a pivot, the worst case would occur when the array is already sorted in
                increasing or decreasing order. Following is recurrence for the worst case. &nbsp;</p>
            <blockquote>
                <p>&nbsp;T(n) = T(0) + T(n-1) +&nbsp;<img
                        src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                        class="ql-img-inline-formula quicklatex-auto-format" alt="\theta               "
                        title="Rendered by QuickLaTeX.com" height=18 width=11 style=vertical-align:0>(n)which is
                    equivalent to &nbsp;T(n) = T(n-1) +&nbsp;<img
                        src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                        class="ql-img-inline-formula quicklatex-auto-format" alt="\theta               "
                        title="Rendered by QuickLaTeX.com" height=18 width=11 style=vertical-align:0>(n)</p>
            </blockquote>
            <p><strong>The solution to the above recurrence is &nbsp;</strong><img
                    src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                    class="ql-img-inline-formula quicklatex-auto-format" alt="                  "
                    title="Rendered by QuickLaTeX.com" height=1 width=1
                    style=vertical-align:0><strong>(n<sup>2</sup>).&nbsp;</strong></p>
            <p><strong>Best Case:</strong><br>The best case occurs when the partition process always picks the middle
                element as the pivot. The following is recurrence for the best case.&nbsp;</p>
            <blockquote>
                <p>&nbsp;T(n) = 2T(n/2) +&nbsp;<img
                        src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                        class="ql-img-inline-formula quicklatex-auto-format" alt="\theta               "
                        title="Rendered by QuickLaTeX.com" height=18 width=11 style=vertical-align:0>(n)</p>
            </blockquote>
            <p><strong>The solution for the above recurrence is&nbsp;</strong><img
                    src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                    class="ql-img-inline-formula quicklatex-auto-format" alt="                  "
                    title="Rendered by QuickLaTeX.com" height=1 width=1 style=vertical-align:0><strong>(nLogn).</strong></p>
            <p><strong>Average Case:</strong>&nbsp;<br>To do average case analysis, we need to consider all
                possible permutation of array and calculate time taken by every permutation which doesn&#8217;t look
                easy.&nbsp;<br>We can get an idea of average case by considering the case when partition puts O(n/9)
                elements in one set and O(9n/10) elements in other set. Following is recurrence for this case. &nbsp;
            </p>
            <blockquote>
                <p>&nbsp;T(n) = T(n/9) + T(9n/10) +&nbsp;<img
                        src=https://www.geeksforgeeks.org/wp-content/ql-cache/quicklatex.com-1c036ee9b2f7e5f73caad5ee937c0293_l3.svg
                        class="ql-img-inline-formula quicklatex-auto-format" alt="\theta               "
                        title="Rendered by QuickLaTeX.com" height=18 width=11 style=vertical-align:0>(n)</p>
            </blockquote>
            <p><strong>The solution of above recurrence is also O(nLogn):</strong></p>
            <p>Although the worst case time complexity of QuickSort is O(n<sup>2</sup>) which is more than many other
                sorting algorithms like Merge Sort and Heap Sort, QuickSort is faster in practice,
                because its inner loop can be efficiently implemented on most architectures, and in most real-world
                data. QuickSort can be implemented in different ways by changing the choice of pivot, so that the worst
                case rarely occurs for a given type of data. However, merge sort is generally considered better when
                data is huge and stored in external storage.&nbsp;<br>&nbsp;</p>
        </blockquote>
    </div>



    <%- include('partials/footer'); -%>